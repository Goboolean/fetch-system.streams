name: Continuous Delivery

on:
  workflow_dispatch:
  pull_request:
    types: [closed]

jobs:
  test:
    if: github.event_name == 'workflow_dispatch' || github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Decrypt environment variables
        run: |
          echo "${{ secrets.ENV }}" base64 -d > .env

      - name: Run a test
        run: |
          make test-app

  build:
    if: github.event_name == 'workflow_dispatch' || github.event.pull_request.merged == true
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Decrypt environment variables
        run: |
          echo "${{ secrets.ENV }}" base64 -d > .env

      - name: Build an app
        run: |
          make build-app

      - name: Set up Docker daemon to using HTTP
        run: |
          sudo mkdir -p /etc/docker
          echo '{"insecure-registries":["${{ secrets.HARBOR_REGISTRY }}:80"]}' | sudo tee /etc/docker/daemon.json
          sudo systemctl restart docker

      # Because you need to use the hostname set in the harbor, you need to use it if the domain is not assigned.
      - name: Set up Harbor hostname
        run: |
          echo "${{ secrets.HARBOR_REGISTRY }} core.harbor.domain" | sudo tee -a /etc/hosts

      - name: Login to Harbor
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.HARBOR_REGISTRY }}:80
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      - name: Push Docker image to Harbor
        run: |
          docker tag fetch-system/streams:latest ${{ secrets.HARBOR_REGISTRY }}:80/fetch-system/streams:${GITHUB_SHA::7}
          docker push ${{ secrets.HARBOR_REGISTRY }}:80/fetch-system/streams:${GITHUB_SHA::7}

  kustomize:
    if: github.event_name == 'workflow_dispatch' || github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Extract image tag
        run: echo "SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV

      - name: Update image tag
        uses: Goboolean/manifests/.github/actions/update-image-tag@feat/cicd
        with:
          app-name: ${{ github.event.repository.name }}
          image-tag: ${{ env.SHORT_SHA }}
          id: ${{ secrets.IMAGE_TAG_UPDATE_APP_ID }}
          private-key: ${{ secrets.IMAGE_TAG_UPDATE_APP_PRIVATE_KEY }}
          profile: dev
          pull-request-link: ${{ github.event.pull_request.html_url }}

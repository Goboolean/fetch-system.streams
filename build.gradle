plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
    id "com.google.protobuf" version "0.9.4"
}

group = 'io.goboolean'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '19'
}

repositories {
	mavenCentral()
}

test {
	useJUnitPlatform()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.apache.logging.log4j:log4j-api:2.17.1'
	implementation 'org.apache.logging.log4j:log4j-core:2.17.1'

	implementation 'org.apache.kafka:kafka-streams:3.4.0'
	implementation 'org.apache.kafka:kafka-clients:3.6.0'
	implementation 'com.google.protobuf:protobuf-java:3.23.4'
	implementation 'com.google.protobuf:protobuf-java-util:3.23.4'
	implementation 'com.google.protobuf:protoc:3.23.4'
	implementation 'com.google.code.gson:gson:2.10.1'
	implementation 'io.etcd:jetcd-core:0.7.7'

	implementation 'io.opentelemetry:opentelemetry-api:1.32.0'
	implementation 'io.opentelemetry:opentelemetry-sdk:1.32.0'
	implementation 'io.opentelemetry:opentelemetry-exporter-otlp:1.32.0'
	implementation 'io.opentelemetry:opentelemetry-exporter-common:1.32.0'
	implementation 'io.opentelemetry.semconv:opentelemetry-semconv:1.23.1-alpha'
	compileOnly 'io.opentelemetry.instrumentation:opentelemetry-log4j-appender-2.17:1.32.0-alpha'

	compileOnly 'org.projectlombok:lombok:1.18.20'
	annotationProcessor 'org.projectlombok:lombok:1.18.20'

	testCompileOnly 'org.projectlombok:lombok:1.18.20'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.apache.kafka:kafka-streams-test-utils:3.6.1'
	testCompileOnly 'io.opentelemetry.instrumentation:opentelemetry-log4j-appender-2.17:1.32.0-alpha'
	testImplementation 'io.opentelemetry.instrumentation:opentelemetry-log4j-appender-2.17:1.32.0-alpha'
}



protobuf {
	protoc {
		artifact = 'com.google.protobuf:protoc:3.23.4'
	}
}

sourceSets {
	main {
		proto {
			srcDir 'src/main/resources'
		}
	}
}

processResources {
    duplicatesStrategy = 'exclude'
}


